{
	"id": "31ed558d20f2a96f2424b5c25ef0cbe0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.3;\n\ncontract Loop {\n\n    uint public count = 0;\n\n    function loop() public {\n        // for loop\n        for (uint i = 0; i < 10; i++) {\n            if (i == 3) {\n                // Skip to next iteration with continue\n                continue;\n            }\n            if (i == 5) {\n                // Exit loop with break\n                break;\n            }\n\n            count++;\n        }\n\n        // while loop\n        uint j;\n        while (j < 10) {\n            if(j >= 5)\n                count++;\n            j++;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol": {
				"Loop": {
					"abi": [
						{
							"inputs": [],
							"name": "count",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "loop",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":57:594  contract Loop {... */\n  mstore(0x40, 0x80)\n    /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":98:99  0 */\n  0x00\n    /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":78:99  uint public count = 0 */\n  dup1\n  sstore\n    /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":57:594  contract Loop {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":57:594  contract Loop {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06661abd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa92100cb\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":78:99  uint public count = 0 */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":106:592  function loop() public {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":78:99  uint public count = 0 */\n    tag_6:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":106:592  function loop() public {... */\n    tag_10:\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":164:170  uint i */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":159:447  for (uint i = 0; i < 10; i++) {... */\n    tag_12:\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":180:182  10 */\n      0x0a\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":176:177  i */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":176:182  i < 10 */\n      lt\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":159:447  for (uint i = 0; i < 10; i++) {... */\n      iszero\n      tag_13\n      jumpi\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":212:213  3 */\n      0x03\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":207:208  i */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":207:213  i == 3 */\n      sub\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":203:312  if (i == 3) {... */\n      iszero\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":289:297  continue */\n      tag_14\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":203:312  if (i == 3) {... */\n      jumpi\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":334:335  5 */\n      0x05\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":329:330  i */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":329:335  i == 5 */\n      sub\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":325:415  if (i == 5) {... */\n      iszero\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":395:400  break */\n      tag_13\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":325:415  if (i == 5) {... */\n      jumpi\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":429:434  count */\n      0x00\n      dup1\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":429:436  count++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_17\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":159:447  for (uint i = 0; i < 10; i++) {... */\n    tag_14:\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":184:187  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":159:447  for (uint i = 0; i < 10; i++) {... */\n      jump(tag_12)\n    tag_13:\n      pop\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":479:485  uint j */\n      0x00\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":495:586  while (j < 10) {... */\n    tag_19:\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":506:508  10 */\n      0x0a\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":502:503  j */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":502:508  j < 10 */\n      lt\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":495:586  while (j < 10) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":532:533  5 */\n      0x05\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":527:528  j */\n      dup2\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":527:533  j >= 5 */\n      lt\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":524:558  if(j >= 5)... */\n      tag_21\n      jumpi\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":551:556  count */\n      0x00\n      dup1\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":551:558  count++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_22\n      swap1\n      tag_18\n      jump\t// in\n    tag_22:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":524:558  if(j >= 5)... */\n    tag_21:\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":572:575  j++ */\n      dup1\n      dup1\n      tag_23\n      swap1\n      tag_18\n      jump\t// in\n    tag_23:\n      swap2\n      pop\n      pop\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":495:586  while (j < 10) {... */\n      jump(tag_19)\n    tag_20:\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":129:592  {... */\n      pop\n        /* \".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":106:592  function loop() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_24:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_25:\n        /* \"#utility.yul\":177:201   */\n      tag_30\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_24\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_32\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_25\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:622   */\n    tag_26:\n        /* \"#utility.yul\":490:567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":480:568   */\n      mstore\n        /* \"#utility.yul\":587:591   */\n      0x11\n        /* \"#utility.yul\":584:585   */\n      0x04\n        /* \"#utility.yul\":577:592   */\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x24\n        /* \"#utility.yul\":608:609   */\n      0x00\n        /* \"#utility.yul\":601:616   */\n      revert\n        /* \"#utility.yul\":628:861   */\n    tag_18:\n        /* \"#utility.yul\":667:670   */\n      0x00\n        /* \"#utility.yul\":690:714   */\n      tag_35\n        /* \"#utility.yul\":708:713   */\n      dup3\n        /* \"#utility.yul\":690:714   */\n      tag_24\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":681:714   */\n      swap2\n      pop\n        /* \"#utility.yul\":736:802   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":729:734   */\n      dup3\n        /* \"#utility.yul\":726:803   */\n      sub\n        /* \"#utility.yul\":723:826   */\n      tag_36\n      jumpi\n        /* \"#utility.yul\":806:824   */\n      tag_37\n      tag_26\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":723:826   */\n    tag_36:\n        /* \"#utility.yul\":853:854   */\n      0x01\n        /* \"#utility.yul\":846:851   */\n      dup3\n        /* \"#utility.yul\":842:855   */\n      add\n        /* \"#utility.yul\":835:855   */\n      swap1\n      pop\n        /* \"#utility.yul\":628:861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220caf79bace54ed2f398f6e24c5b4bee97fdf8c6fd79f0821862b02874addd633d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040525f80553480156011575f80fd5b506101c28061001f5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c806306661abd14610038578063a92100cb14610056575b5f80fd5b610040610060565b60405161004d91906100ff565b60405180910390f35b61005e610065565b005b5f5481565b5f5b600a8110156100a65760038103156100995760058103156100a6575f8081548092919061009390610145565b91905055505b8080600101915050610067565b505f5b600a8110156100e457600581106100d1575f808154809291906100cb90610145565b91905055505b80806100dc90610145565b9150506100a9565b50565b5f819050919050565b6100f9816100e7565b82525050565b5f6020820190506101125f8301846100f0565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61014f826100e7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361018157610180610118565b5b60018201905091905056fea2646970667358221220caf79bace54ed2f398f6e24c5b4bee97fdf8c6fd79f0821862b02874addd633d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C2 DUP1 PUSH2 0x1F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6661ABD EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xA6 JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0x99 JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0xA6 JUMPI PUSH0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x93 SWAP1 PUSH2 0x145 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x67 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x5 DUP2 LT PUSH2 0xD1 JUMPI PUSH0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCB SWAP1 PUSH2 0x145 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0xDC SWAP1 PUSH2 0x145 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112 PUSH0 DUP4 ADD DUP5 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14F DUP3 PUSH2 0xE7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x181 JUMPI PUSH2 0x180 PUSH2 0x118 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xF7 SWAP12 0xAC 0xE5 0x4E 0xD2 RETURN SWAP9 0xF6 0xE2 0x4C JUMPDEST 0x4B 0xEE SWAP8 REVERT 0xF8 0xC6 REVERT PUSH26 0xF0821862B02874ADDD633D64736F6C634300081A003300000000 ",
							"sourceMap": "57:537:0:-:0;;;98:1;78:21;;57:537;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@count_4": {
									"entryPoint": 96,
									"id": 4,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@loop_53": {
									"entryPoint": 101,
									"id": 53,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:864:1",
										"nodeType": "YulBlock",
										"src": "0:864:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "470:152:1",
													"nodeType": "YulBlock",
													"src": "470:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "487:1:1",
																		"nodeType": "YulLiteral",
																		"src": "487:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "490:77:1",
																		"nodeType": "YulLiteral",
																		"src": "490:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "480:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:1"
																},
																"nativeSrc": "480:88:1",
																"nodeType": "YulFunctionCall",
																"src": "480:88:1"
															},
															"nativeSrc": "480:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "480:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "584:1:1",
																		"nodeType": "YulLiteral",
																		"src": "584:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "587:4:1",
																		"nodeType": "YulLiteral",
																		"src": "587:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "577:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "577:6:1"
																},
																"nativeSrc": "577:15:1",
																"nodeType": "YulFunctionCall",
																"src": "577:15:1"
															},
															"nativeSrc": "577:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "577:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "608:1:1",
																		"nodeType": "YulLiteral",
																		"src": "608:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "611:4:1",
																		"nodeType": "YulLiteral",
																		"src": "611:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "601:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "601:6:1"
																},
																"nativeSrc": "601:15:1",
																"nodeType": "YulFunctionCall",
																"src": "601:15:1"
															},
															"nativeSrc": "601:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "601:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "442:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "442:180:1"
											},
											{
												"body": {
													"nativeSrc": "671:190:1",
													"nodeType": "YulBlock",
													"src": "671:190:1",
													"statements": [
														{
															"nativeSrc": "681:33:1",
															"nodeType": "YulAssignment",
															"src": "681:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "708:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "708:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "690:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "690:17:1"
																},
																"nativeSrc": "690:24:1",
																"nodeType": "YulFunctionCall",
																"src": "690:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "681:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "681:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "804:22:1",
																"nodeType": "YulBlock",
																"src": "804:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "806:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "806:16:1"
																			},
																			"nativeSrc": "806:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "806:18:1"
																		},
																		"nativeSrc": "806:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "806:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "729:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "729:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:66:1",
																		"nodeType": "YulLiteral",
																		"src": "736:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "726:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:2:1"
																},
																"nativeSrc": "726:77:1",
																"nodeType": "YulFunctionCall",
																"src": "726:77:1"
															},
															"nativeSrc": "723:103:1",
															"nodeType": "YulIf",
															"src": "723:103:1"
														},
														{
															"nativeSrc": "835:20:1",
															"nodeType": "YulAssignment",
															"src": "835:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "846:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "846:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "853:1:1",
																		"nodeType": "YulLiteral",
																		"src": "853:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "842:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "842:3:1"
																},
																"nativeSrc": "842:13:1",
																"nodeType": "YulFunctionCall",
																"src": "842:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "835:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "628:233:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "657:5:1",
														"nodeType": "YulTypedName",
														"src": "657:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "667:3:1",
														"nodeType": "YulTypedName",
														"src": "667:3:1",
														"type": ""
													}
												],
												"src": "628:233:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c806306661abd14610038578063a92100cb14610056575b5f80fd5b610040610060565b60405161004d91906100ff565b60405180910390f35b61005e610065565b005b5f5481565b5f5b600a8110156100a65760038103156100995760058103156100a6575f8081548092919061009390610145565b91905055505b8080600101915050610067565b505f5b600a8110156100e457600581106100d1575f808154809291906100cb90610145565b91905055505b80806100dc90610145565b9150506100a9565b50565b5f819050919050565b6100f9816100e7565b82525050565b5f6020820190506101125f8301846100f0565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61014f826100e7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361018157610180610118565b5b60018201905091905056fea2646970667358221220caf79bace54ed2f398f6e24c5b4bee97fdf8c6fd79f0821862b02874addd633d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6661ABD EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xA92100CB EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xA6 JUMPI PUSH1 0x3 DUP2 SUB ISZERO PUSH2 0x99 JUMPI PUSH1 0x5 DUP2 SUB ISZERO PUSH2 0xA6 JUMPI PUSH0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x93 SWAP1 PUSH2 0x145 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x67 JUMP JUMPDEST POP PUSH0 JUMPDEST PUSH1 0xA DUP2 LT ISZERO PUSH2 0xE4 JUMPI PUSH1 0x5 DUP2 LT PUSH2 0xD1 JUMPI PUSH0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xCB SWAP1 PUSH2 0x145 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 DUP1 PUSH2 0xDC SWAP1 PUSH2 0x145 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112 PUSH0 DUP4 ADD DUP5 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14F DUP3 PUSH2 0xE7 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x181 JUMPI PUSH2 0x180 PUSH2 0x118 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xF7 SWAP12 0xAC 0xE5 0x4E 0xD2 RETURN SWAP9 0xF6 0xE2 0x4C JUMPDEST 0x4B 0xEE SWAP8 REVERT 0xF8 0xC6 REVERT PUSH26 0xF0821862B02874ADDD633D64736F6C634300081A003300000000 ",
							"sourceMap": "57:537:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;106:486;;;:::i;:::-;;78:21;;;;:::o;106:486::-;164:6;159:288;180:2;176:1;:6;159:288;;;212:1;207;:6;203:109;289:8;203:109;334:1;329;:6;325:90;395:5;325:90;429:5;;:7;;;;;;;;;:::i;:::-;;;;;;159:288;184:3;;;;;;;159:288;;;;479:6;495:91;506:2;502:1;:6;495:91;;;532:1;527;:6;524:34;;551:5;;:7;;;;;;;;;:::i;:::-;;;;;;524:34;572:3;;;;;:::i;:::-;;;;495:91;;;129:463;106:486::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:233;667:3;690:24;708:5;690:24;:::i;:::-;681:33;;736:66;729:5;726:77;723:103;;806:18;;:::i;:::-;723:103;853:1;846:5;842:13;835:20;;628:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "90000",
								"executionCost": "5144",
								"totalCost": "95144"
							},
							"external": {
								"count()": "2402",
								"loop()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 98,
									"end": 99,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 78,
									"end": 99,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78,
									"end": 99,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 594,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 594,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 594,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 594,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 594,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 594,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 594,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 594,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 594,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 594,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 594,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 594,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220caf79bace54ed2f398f6e24c5b4bee97fdf8c6fd79f0821862b02874addd633d64736f6c634300081a0033",
									".code": [
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "6661ABD"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "A92100CB"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 594,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 78,
											"end": 99,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 78,
											"end": 99,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 106,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 106,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 106,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 106,
											"end": 592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 106,
											"end": 592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 106,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 106,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 106,
											"end": 592,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 99,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 99,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 106,
											"end": 592,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 106,
											"end": 592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 164,
											"end": 170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 159,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 159,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 180,
											"end": 182,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 176,
											"end": 177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 176,
											"end": 182,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 159,
											"end": 447,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 159,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 159,
											"end": 447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 212,
											"end": 213,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 207,
											"end": 208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 207,
											"end": 213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 203,
											"end": 312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 289,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 203,
											"end": 312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 334,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 329,
											"end": 330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 325,
											"end": 415,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 395,
											"end": 400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 325,
											"end": 415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 429,
											"end": 434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 429,
											"end": 434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 429,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 429,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 429,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 429,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 159,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 184,
											"end": 187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 184,
											"end": 187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 159,
											"end": 447,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 447,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 159,
											"end": 447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 447,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 479,
											"end": 485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 586,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 495,
											"end": 586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 506,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 502,
											"end": 503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 502,
											"end": 508,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 495,
											"end": 586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 495,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 495,
											"end": 586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 532,
											"end": 533,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 527,
											"end": 528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 527,
											"end": 533,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 524,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 524,
											"end": 558,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 551,
											"end": 556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 551,
											"end": 558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 551,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 551,
											"end": 558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 551,
											"end": 558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 524,
											"end": 558,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 524,
											"end": 558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 572,
											"end": 575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 572,
											"end": 575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 572,
											"end": 575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 575,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 572,
											"end": 575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 572,
											"end": 575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 572,
											"end": 575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 495,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 495,
											"end": 586,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 495,
											"end": 586,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 495,
											"end": 586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 129,
											"end": 592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 106,
											"end": 592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 442,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 587,
											"end": 591,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 584,
											"end": 585,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 592,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 608,
											"end": 609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 616,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 628,
											"end": 861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 667,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 708,
											"end": 713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 690,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 714,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 690,
											"end": 714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 681,
											"end": 714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 681,
											"end": 714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 736,
											"end": 802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 729,
											"end": 734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 726,
											"end": 803,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 723,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 723,
											"end": 826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 806,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 806,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 806,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 806,
											"end": 824,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 806,
											"end": 824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 723,
											"end": 826,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 723,
											"end": 826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 854,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 846,
											"end": 851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 842,
											"end": 855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 835,
											"end": 855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 835,
											"end": 855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 628,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"count()": "06661abd",
							"loop()": "a92100cb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"loop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":\"Loop\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol\":{\"keccak256\":\"0x58737ec9250a18954c2449980a9ea8582d0c3bf53c57dfbaaf0a84406c40725e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c946af11368d7a039b85acd3b7735370f68c1ec7d870e90b972291abe5944a3\",\"dweb:/ipfs/QmakAejbGXySdLhz33Mbgs6w5h3wnBAg3PBCaJ2esQNUhH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": ".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol:Loop",
								"label": "count",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol": {
				"ast": {
					"absolutePath": ".learneth/ethereum/remix-workshops/7.2 Control Flow - Loops/loops.sol",
					"exportedSymbols": {
						"Loop": [
							54
						]
					},
					"id": 55,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Loop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 54,
							"linearizedBaseContracts": [
								54
							],
							"name": "Loop",
							"nameLocation": "66:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "06661abd",
									"id": 4,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "90:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 54,
									"src": "78:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "78:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "98:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "129:463:0",
										"statements": [
											{
												"body": {
													"id": 32,
													"nodeType": "Block",
													"src": "189:258:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 17,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "207:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "212:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "207:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 22,
															"nodeType": "IfStatement",
															"src": "203:109:0",
															"trueBody": {
																"id": 21,
																"nodeType": "Block",
																"src": "215:97:0",
																"statements": [
																	{
																		"id": 20,
																		"nodeType": "Continue",
																		"src": "289:8:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 23,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "329:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 24,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "334:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "329:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 28,
															"nodeType": "IfStatement",
															"src": "325:90:0",
															"trueBody": {
																"id": 27,
																"nodeType": "Block",
																"src": "337:78:0",
																"statements": [
																	{
																		"id": 26,
																		"nodeType": "Break",
																		"src": "395:5:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "429:7:0",
																"subExpression": {
																	"id": 29,
																	"name": "count",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4,
																	"src": "429:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 31,
															"nodeType": "ExpressionStatement",
															"src": "429:7:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 11,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "176:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "180:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "176:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 33,
												"initializationExpression": {
													"assignments": [
														8
													],
													"declarations": [
														{
															"constant": false,
															"id": 8,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "169:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 33,
															"src": "164:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 7,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "164:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 10,
													"initialValue": {
														"hexValue": "30",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "173:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "164:10:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "184:3:0",
														"subExpression": {
															"id": 14,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "184:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 16,
													"nodeType": "ExpressionStatement",
													"src": "184:3:0"
												},
												"nodeType": "ForStatement",
												"src": "159:288:0"
											},
											{
												"assignments": [
													35
												],
												"declarations": [
													{
														"constant": false,
														"id": 35,
														"mutability": "mutable",
														"name": "j",
														"nameLocation": "484:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "479:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 34,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "479:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 36,
												"nodeType": "VariableDeclarationStatement",
												"src": "479:6:0"
											},
											{
												"body": {
													"id": 50,
													"nodeType": "Block",
													"src": "510:76:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 42,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 40,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "527:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "532:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "527:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 46,
															"nodeType": "IfStatement",
															"src": "524:34:0",
															"trueBody": {
																"expression": {
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "551:7:0",
																	"subExpression": {
																		"id": 43,
																		"name": "count",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4,
																		"src": "551:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 45,
																"nodeType": "ExpressionStatement",
																"src": "551:7:0"
															}
														},
														{
															"expression": {
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "572:3:0",
																"subExpression": {
																	"id": 47,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "572:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 49,
															"nodeType": "ExpressionStatement",
															"src": "572:3:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 37,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "502:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3130",
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "506:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "502:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 51,
												"nodeType": "WhileStatement",
												"src": "495:91:0"
											}
										]
									},
									"functionSelector": "a92100cb",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "loop",
									"nameLocation": "115:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "119:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "129:0:0"
									},
									"scope": 54,
									"src": "106:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 55,
							"src": "57:537:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:563:0"
				},
				"id": 0
			}
		}
	}
}